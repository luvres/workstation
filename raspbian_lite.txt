#####################
### Raspbian Lite ###
#####################

sudo umount /dev/sdb1 /dev/sdb2
sudo mkfs.vfat -I /dev/sdb

### Install
sudo dd bs=4096k if=2020-05-27-raspios-buster-lite-armhf.zip  of=/dev/sdb status=progress; sync


### (Install in Raspberry Pi for expand disk)
pi
raspberry
sudo shutdown -h now

### f2fs -> sudo apt-get install f2fs-tools
umount /dev/sdb1 /dev/sdb2
mkdir root_fs boot 2>/dev/null
mount /dev/sdb2 root_fs
rm backup_root_fs -fR; cp -a root_fs backup_root_fs
umount /dev/sdb2
mkfs.f2fs /dev/sdb2
mount -t f2fs /dev/sdb2 root_fs
cp -a backup_root_fs/* root_fs
mount /dev/sdb1 boot

# fstab
sed -i '/ext4/s/noatime/noatime,discard/' root_fs/etc/fstab
sed -i 's/ext4/f2fs/' root_fs/etc/fstab
echo 'tmpfs   /tmp     tmpfs   nodev,nosuid,size=1G  0 0' >>root_fs/etc/fstab

# cmdline.txt
sed -i 's/$/& rootfstype=f2fs/' boot/cmdline.txt
sed -i 's/$/& usbhid.mousepoll=0/' boot/cmdline.txt #Mouse lag

# config.txt
sed -i '/hdmi_drive=2/s/#//' boot/config.txt
echo 'dtparam=sd_overclock=100' >>boot/config.txt #Class 10 SD card

sync; umount /dev/sdb1 /dev/sdb2

##############
### Access ###
##############
pi
raspberry
sudo systemctl enable ssh.service
sudo reboot

echo '' >$HOME/.ssh/known_hosts
ssh -l pi raspberrypi
raspberry
sudo su
echo "root:aamu02" | chpasswd
echo "pi:aamu02" | chpasswd
<ctrl>+d

# Bashrc
sed -i '/alias l/s/#//g' $HOME/.bashrc

# Update
sudo apt-get update && sudo apt-get upgrade -y

### PIXEL Desktop
sudo apt-get install -y --no-install-recommends xserver-xorg xinit
sudo apt-get install -y raspberrypi-ui-mods

### Packages
sudo apt-get install -y \
htop tmux freeglut3-dev synaptic cifs-utils f2fs-tools gftp deluge \
libreoffice chromium-browser leafpad 

### Docker
curl -sSL https://get.docker.com | sh
sudo usermod -aG docker $USER

### Mountpoint
sudo sh -c "echo '/dev/sda1 /mnt auto noatime 0 0' >>/etc/fstab"

sudo reboot


## Nginx
# -------
docker run -d --restart=always --name ftp \
-p 80:80 \
-v /mnt/ftp:/usr/share/nginx/html \
arm32v7/nginx \
&& docker exec -ti ftp sed -i '/sendfile/s/on;/on;\n    autoindex       on;/' /etc/nginx/nginx.conf \
&& docker restart ftp


## OwnCloud
# ----------
docker run --name OwnCloud \
--restart=always \
-p 81:80 \
-v /mnt:/var/www/html/data/luvres/files \
-d arm32v7/owncloud


## NextCloud
# -----------
docker run --name Nextcloud \
--restart=always \
-p 81:80 \
--mount type=bind,src=/mnt,dst=/var/www/html/data/luvres/files \
-d arm32v7/nextcloud
---------------------------------
docker exec -ti Nextcloud chown -R www-data:root /var/www/html/data
docker exec -ti Nextcloud chown -R www-data. /var/www/html/data/luvres


## Lighttpd
docker run --name ftp -h ftp \
--restart=always \
-p 80:80 \
-v /mnt/ftp:/var/www \
-d izone/arm:lighttpd
#docker start ftp


## Flask
# -------
docker run --name Flask \
--restart=always \
-p 8080:80 \
-v $HOME/1uvr3z/_:/app \
-d izone/flask:armhf-ml


# Rsync
# -------
#rsync -avz --delete --progress /aux/ pi@raspberrypi:/mnt/ftp
#sshpass -p "aamu02" rsync -avz --delete --progress /aux/ pi@raspberrypi:/mnt/ftp

# Todos
rsync -avz --delete --progress /aux/ pi@server:/mnt/ftp
rsync -avz --delete --progress pi@server:/mnt/ftp/ /aux

# aux
rsync -avz --exclude CURSOS --delete --progress /aux/ pi@server:/mnt/ftp
rsync -avz --exclude CURSOS --delete --progress pi@server:/mnt/ftp/ /aux

# CURSOS
rsync -avz --delete --progress /CURSOS/ pi@server:/mnt/ftp/CURSOS
rsync -avz --delete --progress pi@server:/mnt/ftp/CURSOS/ /CURSOS


## Samba
# -------
sudo apt-get install -y samba

sudo smbpasswd -a pi

sudo cp /etc/samba/smb.conf{,.orig}
sudo cp /etc/samba/smb.conf{,.master}

sudo bash -c "echo '[share]' >>/etc/samba/smb.conf.master"
sudo bash -c "echo 'comment = Backup Isabel' >>/etc/samba/smb.conf.master"
sudo bash -c "echo 'path = /mnt/ftp/BackUP_ISABEL' >>/etc/samba/smb.conf.master"
sudo bash -c "echo '#guest ok = YES' >>/etc/samba/smb.conf.master"
sudo bash -c "echo 'read only = no' >>/etc/samba/smb.conf.master"

sudo bash -c "echo '[ftp]' >>/etc/samba/smb.conf.master"
sudo bash -c "echo 'comment = Pi Ftp' >>/etc/samba/smb.conf.master"
sudo bash -c "echo 'path = /mnt/ftp' >>/etc/samba/smb.conf.master"
sudo bash -c "echo '#guest ok = YES' >>/etc/samba/smb.conf.master"
sudo bash -c "echo 'read only = no' >>/etc/samba/smb.conf.master"

sudo bash -c "testparm /etc/samba/smb.conf.master > /etc/samba/smb.conf"

sudo /etc/init.d/samba restart

## Mount in Linux
sudo mount.cifs -o username=pi //pi/ftp /mnt/

## Access
# Unix
smd://169.8.192.130/pi

# Windows
\\169.8.192.130\pi


## HP Laserjet M1319f MPF
# ------------------------
# https://opensource.com/article/18/3/print-server-raspberry-pi
sudo apt-get install -y cups
sudo usermod -aG lpadmin pi
sudo cupsctl --remote-any
sudo /etc/init.d/cups restart

# http://foo2zjs.rkkda.com/
wget -O foo2zjs.tar.gz http://foo2zjs.rkkda.com/foo2zjs.tar.gz
tar zxf foo2zjs.tar.gz
cd foo2zjs
make
sudo make install

http://localhost:631
http://169.8.192.130:631


#################################
#################################
#################################


### FreeCAD Build
sudo apt-get install -y \
git build-essential cmake python python-matplotlib libtool libcoin80-dev libsoqt4-dev libxerces-c-dev libboost-dev libboost-filesystem-dev libboost-regex-dev libboost-program-options-dev libboost-signals-dev libboost-thread-dev libboost-python-dev libqt4-dev libqt4-opengl-dev qt4-dev-tools python-dev python-pyside pyside-tools liboce-modeling-dev liboce-visualization-dev liboce-foundation-dev liboce-ocaf-lite-dev liboce-ocaf-dev oce-draw libeigen3-dev libqtwebkit-dev libshiboken-dev libpyside-dev libode-dev swig libzipios++-dev libfreetype6 libfreetype6-dev netgen-headers libmedc-dev libvtk6-dev libproj-dev

# Source FreeCAD
#tmux new-session -s freecad
#tmux attach -t freecad
mkdir $HOME/1uvr3z 2>/dev/null && cd $HOME/1uvr3z
git clone https://github.com/FreeCAD/FreeCAD.git $HOME/1uvr3z/FreeCAD
mkdir -p $HOME/1uvr3z/freecad-build 2>/dev/null && cd $HOME/1uvr3z/freecad-build

# Build
cmake -DCMAKE_BUILD_TYPE=Debug -DBUILD_FEM_NETGEN=ON $HOME/1uvr3z/FreeCAD
time make #-j3

# Reset git
git reset --hard HEAD

# Pull git
pull git


### QtCreator
sudo apt-get install -y qt5-default qtcreator


### Arduino IDE
VERSION_ARDUINO=1.8.1
wget -c https://downloads.arduino.cc/arduino-${VERSION_ARDUINO}-linuxarm.tar.xz
tar Jxf arduino-${VERSION_ARDUINO}-linuxarm.tar.xz
rm arduino-${VERSION_ARDUINO}-linuxarm.tar.xz
sudo arduino-${VERSION_ARDUINO}/install.sh

### Git
git config --global user.name "luvres"
git config --global user.email "luvres@hotmail.com"
ssh-keygen
cat $HOME/.ssh/id_rsa.pub | xclip -sel clip # $HOME/.ssh/config
ssh -T git@github.com
ssh -T -p443 git@ssh.github.com

git config --global credential.helper cache
git add . && git commit -am "Primeiro commit" && git push

#################
### Stretch repo
sudo sed -i 's/jessie/stretch/' /etc/apt/sources.list
#sudo sed -i 's/jessie/stretch/' /etc/apt/sources.list.d/raspi.list 

sudo sed -i 's/stretch/jessie/' /etc/apt/sources.list
sudo sed -i 's/stretch/jessie/' /etc/apt/sources.list.d/raspi.list 
#################

# Config (Plug keyboard)
pi
raspberry
sudo raspi-config
6x↓ <Enter>
3x↓ <Enter>
← <Enter>
<Enter>
<Tab><Tab><Enter>

# ssh Host access
echo '' >$HOME/.ssh/known_hosts
ssh -l pi raspberrypi
# login: pi
# passwd: raspberry
sudo su
echo "root:aamu02" | chpasswd
echo "pi:aamu02" | chpasswd
sudo sed -i '/StrictHostKeyChecking/s/#//g' /etc/ssh/ssh_config
sudo sed -i '/StrictHostKeyChecking/s/ask/no/g' /etc/ssh/ssh_config

# Mount HD
echo /dev/sda1 /mnt auto defaults 0 0 >>/etc/fstab

# Install docker
curl -sSL https://get.docker.com | sh
sudo usermod -aG docker $USER

#sudo rm /etc/init.d/docker
#sudo rm /etc/rc*/*docker
#sudo apt-get purge docker
#apt-cache madison docker-engine
#sudo apt-get -y install docker-engine=1.12.6-0~ubuntu-xenial --allow-downgrades
#sudo apt-get -y install docker-engine=1.12.6-0~raspbian-jessie --force-yes

# Swap File
dd if=/dev/zero of=/swapfile bs=1M count=512
chmod 0600 /swapfile 
mkswap /swapfile
swapon /swapfile
echo '/swapfile none swap defaults 0 0' >>/etc/fstab

### 64-bit kernel
wget -c http://www.finnie.org/software/raspberrypi/ubuntu-rpi3/20160517-raspi3-arm64-firmware-kernel.tar.xz
tar Jxf 20160517-raspi3-arm64-firmware-kernel.tar.xz
mkdir /root/boot && mv /boot/* /root/boot
cp boot/firmware/* /boot
cp -a lib/modules/4.5.0+ /lib/modules
cp lib/firmware/brcm/* /lib/firmware/brcm/
rm 20160517-raspi3-arm64-firmware-kernel.tar.xz boot/ lib/ -fR
reboot

########################
# Stretch repo
sudo sh -c 'echo "deb http://mirrordirector.raspbian.org/raspbian/ stretch main contrib non-free rpi" >/etc/apt/sources.list.d/stretch.list'

# Testing
sudo sed -i 's/jessie/testing/' /etc/apt/sources.list.d/raspi.list 
sudo sed -i 's/jessie/testing/' /etc/apt/sources.list
# Stable
#sudo sed -i 's/testing/jessie/' /etc/apt/sources.list
#sudo sed -i 's/testing/jessie/' /etc/apt/sources.list.d/raspi.list 

### Stable and Testing
sudo sh -c 'echo "Package: *" >/etc/apt/preferences.d/jessie.pref'
sudo sh -c 'echo "Pin: release a=jessie" >>/etc/apt/preferences.d/jessie.pref'
sudo sh -c 'echo "Pin-Priority: 900" >>/etc/apt/preferences.d/jessie.pref'
##
sudo sh -c 'echo "Package: *" >/etc/apt/preferences.d/stretch.pref'
sudo sh -c 'echo "Pin: release a=stretch" >>/etc/apt/preferences.d/stretch.pref'
sudo sh -c 'echo "Pin-Priority: 750" >>/etc/apt/preferences.d/stretch.pref'
##
sudo sh -c 'echo "deb http://mirrordirector.raspbian.org/raspbian/ jessie main contrib non-free rpi" >>/etc/apt/sources.list.d/jessie.list'
##
sudo sh -c 'echo "deb http://mirrordirector.raspbian.org/raspbian/ stretch main contrib non-free rpi" >>/etc/apt/sources.list.d/stretch.list'
##
sudo apt-get update
sudo apt-get -t stretch install deluge
######################

#sudo apt-get install software-properties-common
#sudo apt-get -t stable dist-upgrade


